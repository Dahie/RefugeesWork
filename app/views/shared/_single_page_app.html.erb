<%
###############################################################################
# SELECT DATA for PRESENTATION (=ARGUMENTS provided to this ERB File )
###############################################################################
params = {
  data:             {                           # API: "/v0.0.1/api/data"
    leads:            Lead.all,                 # API: "/v0.0.1/api/data/lead"
    users:            User.all,                 # API: "/v0.0.1/api/data/user"
    orders:           Order.all                 # API: "/v0.0.1/api/data/order"
  },
  translations:     {
    en:               YAML.load_file('config/locales/en.yml')['en']
  },
  collection:       { # API: "/v0.0.1/api/collection"
    # title:          ['Dummy1', 'Dummy2'],
    # description:    ['This is dummy 1', 'This is dummy 2'],
    # counter:        [1, 2]
  },
  schema:           { # API: "/v0.0.1/api/campaigns/schema"
    # title:          'string',
    # description:    'string',
    # counter:        'integer'
  },
  user:             { # API: "/v0.0.1/api/user?email=xxx&password=xxx&secret=xxx"
    identity:       current_user,
    secret:         form_authenticity_token
  },
  containerID:      'APP'
}
###############################################################################
# VALIDATE CONTRACT (Between FRONTEND DEV and BACKEND DEV)
###############################################################################
V8::Context.new do |v8|
v8.load("app/assets/javascripts/APP.bundle.js")
if true #v8.eval('APP.VALIDATE()') # but pass in 'params' and VALIDATE
#############################################################################%>
<!--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    COMPONENT STYLING - (In Stylus)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
<link rel='stylesheet' type='text/css' href='./assets/APP.bundle.css'>
<!--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    SERVER SIDE - RENDER WEB COMPONENTS - (for SEO & google crawler)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->

<b>params.data.leads:</b><br><%=params[:data][:leads].to_json%><hr>
<b>params.data.users:</b><br><%=params[:data][:users].to_json%><hr>
<b>params.data.orders:</b><br><%=params[:data][:orders].to_json%><hr>
<b>params.data.translations.en:</b><br><%=params[:translations][:en].to_json%><hr>
<b>params.collection:</b><br><%=params[:collection].to_json%><hr>
<b>params.schema:</b><br><%=params[:schema].to_json%><hr>
<b>params.user:</b><br><%=params[:user].to_json%><hr>
<b>params.containerID:</b><br><%=params[:containerID].to_json%><hr>
<hr><a id="LAYOUT" href="#LAYOUT"> Single Page Layout </a>
<div id='<%=params[:containerID]%>' class="COMPONENT">


<%=###########################################################################
  # CLIENT SIDE - INITIALIZE [CONFIGURE & START]
  #
  # [COMPONENT DOM INITIALIZATION & RENDERING (for SEO & google crawler)]
  # Render TEMPLATE on the Server Side
  # + data-* attributes is where client side updates will go
  # ==> with MutationObserver on data-* attributes
  #
  # @TODO: This is currently so slow with "TheRubyRacer",
  #       that it is not a viable option, thats why "is_rendered" is set
  #       to "false", for further details, see:
  #       http://confluence.ikusei.de/display/IKU/Dual+Side+Templating
  # ==> needs to use "PLATES.JS" or faster method - currently this is broken.
  #
  #############################################################################
  if is_rendered = false      # set to true to render server side
    v8.scope.APP.CONFIGURE(params)
  end
###############################################################################
%></div>
<!--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  CLIENT SIDE - INITIALIZE [CONFIGURE & START]
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
<script type="text/javascript" src='/assets/APP.bundle.js'></script>
<script>
  var params = <%=is_rendered%> ? false // switch to not re-init client-side
    : JSON.parse('<%=escape_javascript(params.to_json.html_safe)%>');
  /////////////////////////////////////////////////////////////////////////////
  // APP = FACTORY();
  try { APP.CONTRACT.VALIDATE(params);
    window.onload = function INITIALIZE () {
      APP(params.containerID).CONFIGURE(params).START();
    };
  } catch (error) { alert(error); console.error(error); } finally {
    console.log(' === '+APP.CONTRACT.NAME+' (Version '+APP.CONTRACT.VERSION+') === ');
  }
</script>

<script type='text/javascript'>//<![CDATA[
;document.write("<script defer src='//HOST:31337/socket.io/socket.io.js'><\/script><script defer src='//HOST:31338/client/browser-sync-client.0.9.1.js'><\/script>".replace(/HOST/g, location.hostname));
//]]></script>
<!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
        <%else%><h1>Received invalid DATA from backend</h1><%end end%>
<!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
